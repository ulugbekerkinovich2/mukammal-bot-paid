from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from loader import dp, bot
class Form(StatesGroup):
    name = State()  # Ism va familiya holati
    phone = State()
# Variables to store user responses across handlers
user_data = {}

categories = {
    1: "–Å–ª“ì–∏–∑ –∫–µ–∫—Å–∞ –¥–µ–± —ç—ä—Ç–∏—Ä–æ—Ñ —ç—Ç–∏—à (—ë–∫–∏ –±–µ–∫–æ—Ä “õ–∏–ª–∏—à)",
    2: "–ß—É“õ—É—Ä–ª–∞—à—Ç–∏—Ä–∏–ª–≥–∞–Ω —Ç–∏–±–±–∏–π –∫—û—Ä–∏–∫–¥–∞–Ω —û—Ç–∫–∞–∑–∏—à",
    3: "“≤—É–∂–∂–∞—Ç–ª–∞—Ä–∏–Ω–∏ —Ä–∞—Å–º–∏–π–ª–∞—à—Ç–∏—Ä–∏—à –≤–∞ “õ–∞–π—Ç–∞ —Ç–∏–∫–ª–∞—à–¥–∞ —ë—Ä–¥–∞–º –±–µ—Ä–∏—à",
    4: "–Ø“õ–∏–Ω –∏–Ω—Å–æ–Ω–ª–∞—Ä–∏ –±–∏–ª–∞–Ω –º—É–Ω–æ—Å–∞–±–∞—Ç–ª–∞—Ä–Ω–∏ —Ç–∏–∫–ª–∞—à",
    5: "–ú–∞–¥–∞–Ω–∏–π —Ç–∞–¥–±–∏—Ä–ª–∞—Ä–Ω–∏ —Ç–∞—à–∫–∏–ª —ç—Ç–∏—à–¥–∞ –∫—û–Ω–≥–∏–ª–ª–∏–ª–∞—Ä–Ω–∏ —Ä—û–π—Ö–∞—Ç–≥–∞ –æ–ª–∏—à",
    6: "–ë–µ–ø—É–ª –¥–æ—Ä–∏-–¥–∞—Ä–º–æ–Ω –±–∏–ª–∞–Ω —Ç–∞—ä–º–∏–Ω–ª–∞—à–Ω–∏ —Ç–∞—à–∫–∏–ª —ç—Ç–∏—à",
    7: "–ò–∂—Ç–∏–º–æ–∏–π “õ—û–ª–ª–∞–±-“õ—É–≤–≤–∞—Ç–ª–∞—à –º–∞—Ä–∫–∞–∑–∏ –∏–Ω—Ç–µ—Ä–Ω–∞—Ç —É–π–ª–∞—Ä–∏–≥–∞ –∫—É–Ω–¥—É–∑–≥–∏ “õ–∞—Ç–Ω–æ–≤ —É—á—É–Ω –∞—Ä–∏–∑–∞ “õ–∞–±—É–ª “õ–∏–ª–∏—à",
    8: "–é–∑–≥–∞–ª–∞—Ä –ø–∞—Ä–≤–∞—Ä–∏—à–∏–≥–∞ –º—É“≥—Ç–æ–∂ —à–∞—Ö—Å–ª–∞—Ä–≥–∞ –ø—É–ª–ª–∏–∫ —Ö–∏–∑–º–∞—Ç –∫—û—Ä—Å–∞—Ç–∏—à",
    9: "–ò–∂—Ç–∏–º–æ–∏–π “≥–∏–º–æ—è –º–∏–ª–ª–∏–π –∞–≥–µ–Ω—Ç–ª–∏–≥–∏ —Ç–∏–∑–∏–º–∏–¥–∞–≥–∏ —Å–∞–Ω–∞—Ç–æ—Ä–∏–π–ª–∞—Ä–≥–∞ –π—û–ª–ª–∞–Ω–º–∞–ª–∞—Ä –∞–∂—Ä–∞—Ç–∏—à",
    10: "–ü—Å–∏—Ö–æ–ª–æ–≥–∏–∫ —Ö–∏–∑–º–∞—Ç –∫—û—Ä—Å–∞—Ç–∏—à",
    11: "“≤—É“õ—É“õ–∏–π –º–∞—Å–∞–ª–∞–ª–∞—Ä–¥–∞ —ë—Ä–¥–∞–º —Ö–∏–∑–º–∞—Ç–∏",
    12: "–ù–æ–≥–∏—Ä–æ–Ω–ª–∏–∫–Ω–∏ –±–µ–ª–≥–∏–ª–∞—à –≤–∞ –≥—É—Ä—É“≥–∏–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à",
    13: "–ù–æ–≥–∏—Ä–æ–Ω–ª–∏–≥–∏ –±—û–ª–≥–∞–Ω —à–∞—Ö—Å–ª–∞—Ä–Ω–∏ –±–∞–Ω–¥–ª–∏–≥–∏–Ω–∏ —Ç–∞—ä–º–∏–Ω–ª–∞—à –≤–∞ –∫–∞—Å–±–≥–∞ —Ç–∞–π—ë—Ä–ª–∞—à",
    14: "–ù–æ–≥–∏—Ä–æ–Ω–ª–∏–∫ –Ω–∞—Ñ–∞“õ–∞—Å–∏–Ω–∏ —Ç–∞–π–∏–Ω–ª–∞—à",
    15: "–ù–æ–≥–∏—Ä–æ–Ω–ª–∏–≥–∏ –±—û–ª–≥–∞–Ω —à–∞—Ö—Å–ª–∞—Ä–≥–∞ –µ—Ä —É—á–∞—Å—Ç–∫–∞–ª–∞—Ä–∏–Ω–∏ –æ–Ω–ª–∞–π–Ω-–∞—É–∫—Ü–∏–æ–Ω–¥–∞ —Å–æ—Ç–∏–± –æ–ª–∏—à —Ö–∞—Ä–∞–∂–∞—Ç–ª–∞—Ä–∏–Ω–∏–Ω–≥ –±–∏—Ä “õ–∏—Å–º–∏–Ω–∏ “õ–æ–ø–ª–∞–± –±–µ—Ä–∏—à",
    16: "–¢–∏–±–±–∏–π —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è “õ–∏–ª–∏—à –±—û–ª–∏–º–ª–∞—Ä–∏–¥–∞ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä —à–∞—Ä–æ–∏—Ç–¥–∞ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è —Ç–∞–¥–±–∏—Ä–ª–∞—Ä–∏–Ω–∏ —û—Ç–∞—à —É—á—É–Ω –π—û–Ω–∞–ª—Ç–∏—Ä–∏—à",
    17: "–ù–æ–≥–∏—Ä–æ–Ω–ª–∏–∫ –±–µ–ª–≥–∏–ª–∞—à –≤–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–ª–∏–∫–Ω–∏ –±–∞“≥–æ–ª–∞—à",
    18: "–ù–æ–≥–∏—Ä–æ–Ω–ª–∏–∫ —Ç—û“ì—Ä–∏—Å–∏–¥–∞–≥–∏ –º–∞—ä–ª—É–º–æ—Ç–Ω–æ–º–∞ –æ–ª–∏—à",
    19: "–ë–æ–ª–∞–ª–∏–∫–¥–∞–Ω –Ω–æ–≥–∏—Ä–æ–Ω–ª–∏–≥–∏ –±—û–ª–≥–∞–Ω —Ñ–∞—Ä–∑–∞–Ω–¥–ª–∞—Ä–∏ –±–æ—Ä –æ–Ω–∞–ª–∞—Ä–≥–∞ —ë—à–≥–∞ –¥–æ–∏—Ä –Ω–∞—Ñ–∞“õ–∞",
    20: "–ê—ë–ª–ª–∞—Ä–Ω–∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è –º–∞—Ä–∫–∞–∑–∏–¥–∞ —ë—Ä–¥–∞–º –∫—û—Ä—Å–∞—Ç–∏–ª–≥–∞–Ω –≤–∞ “≥–∏–º–æ—è –æ—Ä–¥–µ—Ä–∏ –±–µ—Ä–∏–ª–≥–∞–Ω–ª–∞—Ä–Ω–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ “õ–∏–ª–∏—à",
    21: "–ô—û“õ–æ—Ç–∏–ª–≥–∞–Ω “≥—É–∂–∂–∞—Ç–ª–∞—Ä–Ω–∏ —Ç–∏–∫–ª–∞—à –±—û–π–∏—á–∞ —ë—Ä–¥–∞–º",
    22: "–¢–∞–∑–π–∏“õ –≤–∞ –∑—û—Ä–∞–≤–æ–Ω–ª–∏–∫–¥–∞–Ω –∂–∞–±—Ä–ª–∞–Ω–≥–∞–Ω–ª–∞—Ä –±—û–π–∏—á–∞ —Å—É–¥–ª–∞—Ä–≥–∞ –∞—Ä–∏–∑–∞ –≤–∞ –¥–∞—ä–≤–æ–ª–∞—Ä –∫–∏—Ä–∏—Ç–∏—à",
    23: "–ë–∞–Ω–∫ –∫–∞—Ä—Ç–∞—Å–∏–Ω–∏ —Ç–∏–∫–ª–∞—à —É—á—É–Ω –º—É—Ä–æ–∂–∞–∞—Ç “õ–∏–ª–∏—à —é–∑–∞—Å–∏–¥–∞–Ω –∏—à–æ–Ω—á–Ω–æ–º–∞ —Ç–∞—Å–¥–∏“õ–ª–∞—à",
    24: "‚Äú–ê—ë–ª–ª–∞—Ä –¥–∞—Ñ—Ç–∞—Ä–∏‚Äù–≥–∞ –∫–∏—Ä–∏—Ç–∏–ª–≥–∞–Ω —Ö–æ—Ç–∏–Ω-“õ–∏–∑–ª–∞—Ä –≤–∞ —É–ª–∞—Ä–Ω–∏–Ω–≥ —Ñ–∞—Ä–∑–∞–Ω–¥–ª–∞—Ä–∏ —É—á—É–Ω –¥–æ—Ä–∏-–¥–∞—Ä–º–æ–Ω —ë–∫–∏ –º—É—Ä–∞–∫–∫–∞–± –∂–∞—Ä—Ä–æ“≥–ª–∏–∫ –∞–º–∞–ª–∏—ë—Ç–ª–∞—Ä–∏ —É—á—É–Ω —Å–µ–∫—Ç–æ—Ä —Ä–∞“≥–±–∞—Ä–∏–≥–∞ —Å—û—Ä–æ–≤–Ω–æ–º–∞ –∫–∏—Ä–∏—Ç–∏—à",
    25: "–¢–∞–∑–π–∏“õ –≤–∞ –∑—û—Ä–∞–≤–æ–Ω–ª–∏–∫–¥–∞–Ω –∂–∞–±—Ä–ª–∞–Ω–≥–∞–Ω —Ö–æ—Ç–∏–Ω-“õ–∏–∑–ª–∞—Ä–≥–∞ “≥–∏–º–æ—è –æ—Ä–¥–µ—Ä–∏–Ω–∏ –±–µ—Ä–∏—à —É—á—É–Ω —Å—û—Ä–æ–≤–Ω–æ–º–∞ –∫–∏—Ä–∏—Ç–∏—à",
    26: "–ö–∞–º —Ç–∞—ä–º–∏–Ω–ª–∞–Ω–≥–∞–Ω –æ–∏–ª–∞–ª–∞—Ä–≥–∞ –±–æ–ª–∞–ª–∞—Ä –Ω–∞—Ñ–∞“õ–∞—Å–∏ –≤–∞ –º–æ–¥–¥–∏–π —ë—Ä–¥–∞–º —Ç–∞–π–∏–Ω–ª–∞—à–≥–∞ –∞—Ä–∏–∑–∞ –±–µ—Ä–∏—à",
    27: "‚Äú–ò–∂—Ç–∏–º–æ–∏–π “≥–∏–º–æ—è —è–≥–æ–Ω–∞ —Ä–µ–µ—Å—Ç—Ä–∏‚Äù –≥–∞ –∫–∏—Ä–∏—à —É—á—É–Ω –∞—Ä–∏–∑–∞ –±–µ—Ä–∏—à",
    28: "–ö–∞–º —Ç–∞—ä–º–∏–Ω–ª–∞–Ω–≥–∞–Ω –¥–µ–± —ç—ä—Ç–∏—Ä–æ—Ñ —ç—Ç–∏–ª–≥–∞–Ω–ª–∏–∫ —Ç—û“ì—Ä–∏—Å–∏–¥–∞ –º–∞—ä–ª—É–º–æ—Ç–Ω–æ–º–∞ –±–µ—Ä–∏—à",
    29: "–¢—É—Ç–∏–Ω–≥–∞–Ω –æ—Ç–∞-–æ–Ω–∞–ª–∞—Ä–Ω–∏ —Ç–∞–π—ë—Ä–ª–∞—à –∫—É—Ä—Å–ª–∞—Ä–∏–¥–∞ —û“õ–∏—à –±—û–π–∏—á–∞ –∞—Ä–∏–∑–∞ “õ–∞–±—É–ª “õ–∏–ª–∏—à",
    30: "–ë–æ–ª–∞–Ω–∏ –≤–∞—Å–∏–π–ª–∏–∫–∫–∞ –≤–∞ “≥–æ–º–∏–π–ª–∏–∫–∫–∞ –æ–ª–∏—à —É—á—É–Ω –∞—Ä–∏–∑–∞ “õ–∞–±—É–ª “õ–∏–ª–∏—à",
    31: "–ë–æ“õ—É–≤—á–∏—Å–∏–Ω–∏ –π—û“õ–æ—Ç–≥–∞–Ω–ª–∏–∫ –Ω–∞—Ñ–∞“õ–∞—Å–∏–Ω–∏ —Ä–∞—Å–º–∏–π–ª–∞—à—Ç–∏—Ä–∏—à",
    32: "–ë–æ–ª–∞–Ω–∏ —Ñ–∞—Ä–∑–∞–Ω–¥–ª–∏–∫–∫–∞ –æ–ª–∏—à —É—á—É–Ω –∞—Ä–∏–∑–∞ “õ–∞–±—É–ª “õ–∏–ª–∏—à",
    33: "–ñ–∏—Å–º–æ–Ω–∏–π, –∞“õ–ª–∏–π, —Å–µ–Ω—Å–æ—Ä —ë–∫–∏ —Ä—É“≥–∏–π –Ω—É“õ—Å–æ–Ω–ª–∞—Ä–∏ –±—û–ª–≥–∞–Ω, —à—É–Ω–∏–Ω–≥–¥–µ–∫, —É–∑–æ“õ –≤–∞“õ—Ç –¥–∞–≤–æ–ª–∞–Ω–∏—à–≥–∞ –º—É“≥—Ç–æ–∂ –±—û–ª–≥–∞–Ω, –º–∞–∫—Ç–∞–±–ª–∞—Ä, –º–∞–∫—Ç–∞–±-–∏–Ω—Ç–µ—Ä–Ω–∞—Ç–ª–∞—Ä–≥–∞ “õ–∞—Ç–Ω–∞–π –æ–ª–º–∞–π–¥–∏–≥–∞–Ω –±–æ–ª–∞–ª–∞—Ä —É—á—É–Ω —É–π–¥–∞ —è–∫–∫–∞ —Ç–∞—Ä—Ç–∏–±–¥–∞ —Ç–∞—ä–ª–∏–º –±–µ—Ä–∏—à —Ö–∏–∑–º–∞—Ç–∏–Ω–∏ –∫—û—Ä—Å–∞—Ç–∏—à",
    34: "–û—Ç–∞-–æ–Ω–∞–ª–∏–∫ “≥—É“õ—É“õ–ª–∞—Ä–∏–Ω–∏ —Ç–∏–∫–ª–∞—à –±—û–π–∏—á–∞ —Ö—É–ª–æ—Å–∞ –±–µ—Ä–∏—à",
    35: "18 —ë—à–≥–∞—á–∞ –±—û–ª–≥–∞–Ω “≥–æ–º–∏–ª–∞–¥–æ—Ä –æ–Ω–∞–ª–∞—Ä–≥–∞ —Ñ–∞—Ä–∑–∞–Ω–¥–∏–¥–∞–Ω –≤–æ–∑ –∫–µ—á–∏—à–Ω–∏–Ω–≥ –æ“õ–∏–±–∞—Ç–ª–∞—Ä–∏ —é–∑–∞—Å–∏–¥–∞–Ω —Ç—É—à—É–Ω—Ç–∏—Ä–∏—à –±–µ—Ä–∏—à",
    36: "–°—É–¥ “õ–∞—Ä–æ—Ä–∏–≥–∞ –∞—Å–æ—Å–∞–Ω –±–µ–¥–∞—Ä–∞–∫ –π—û“õ–æ–ª–≥–∞–Ω —Ñ—É“õ–∞—Ä–æ–ª–∞—Ä–≥–∞ –Ω–∞—Ñ–∞“õ–∞ —Ç–∞–π–∏–Ω–ª–∞—à",
    37: "–ë–æ–ª–∞–Ω–∏ –¥–∞–≤–ª–∞—Ç –º–∞–∫—Ç–∞–±–≥–∞—á–∞ —Ç–∞—ä–ª–∏–º –º—É–∞—Å—Å–∞—Å–∞—Å–∏–≥–∞ –∂–æ–π–ª–∞—à—Ç–∏—Ä–∏—à",
    38: "–ù–∞—Ñ–∞“õ–∞–ª–∞—Ä–Ω–∏ “õ–∞–π—Ç–∞ “≥–∏—Å–æ–±–ª–∞—à –±—û–π–∏—á–∞ –∞—Ä–∏–∑–∞"
}

async def get_main_keyboard(page=1, items_per_page=5):
    """Inline klaviatura yaratish, pagination bilan."""
    markup = InlineKeyboardMarkup(row_width=1)
    sorted_keys = sorted(categories.keys())
    start = (page - 1) * items_per_page
    end = start + items_per_page
    total_pages = len(categories) // items_per_page + (1 if len(categories) % items_per_page > 0 else 0)

    for index, key in enumerate(sorted_keys[start:end], start=start+1):
        button_text = f"{index}. {categories[key]}"
        markup.add(InlineKeyboardButton(button_text, callback_data=f"category_{key}"))

    if page > 1:
        markup.add(InlineKeyboardButton("‚¨ÖÔ∏è Oldingi", callback_data=f"page_{page - 1}"))
    if page < total_pages:
        markup.add(InlineKeyboardButton("Keyingi ‚û°Ô∏è", callback_data=f"page_{page + 1}"))

    return markup


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message, state: FSMContext):
    await Form.name.set()  # Foydalanuvchini ism holatiga o'tkazing
    await message.answer("Assalomu alaykum! Muzrabot tumani ijtimoiy yordam botiga xush kelibsiz. Ism va Familiyangizni kiriting.\nNamuna: Alisherov Farhod Toxirovich.", parse_mode='HTML', reply_markup=ReplyKeyboardRemove())

@dp.message_handler(state=Form.name)
async def ask_for_full_name(message: types.Message, state: FSMContext):
    await state.update_data(full_name=message.text)
    await Form.next()  # Keyingi holatga o'ting - telefon raqami
    contact_keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    contact_button = KeyboardButton("Telefon raqamni yuborish üìû", request_contact=True)
    contact_keyboard.add(contact_button)
    await message.answer("Iltimos, telefon raqamingizni yuboring:", reply_markup=contact_keyboard)

@dp.message_handler(content_types=types.ContentType.CONTACT, state=Form.phone)
async def ask_for_assistance_type(message: types.Message, state: FSMContext):
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    
    await state.update_data(phone_number=message.contact.phone_number)
    await state.reset_state(with_data=False)  # FSM holatini tugating
    await message.answer("Sizga qanday ijtimoiy yordam kerak? Kategoriyalarni tanlash uchun quyidagi ro'yxatdan foydalaning.", reply_markup=await get_main_keyboard())

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('page_'))
async def handle_page_change(callback_query: types.CallbackQuery, state: FSMContext):
    page = int(callback_query.data.split('_')[1])
    await callback_query.message.edit_reply_markup(reply_markup=await get_main_keyboard(page=page))

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('category_'))
async def handle_category_selection(callback_query: types.CallbackQuery, state: FSMContext):
    # await bot.delete_message(chat_id=callback_query.chat.id, message_id=callback_query.message_id)

    category_key = int(callback_query.data.split('_')[1])
    category_name = categories.get(category_key, "Noma'lum kategoriya")
    await state.update_data(chosen_category=category_name)
    response_text = f"Siz tanlagan yordam turi: {category_name}\nSizga qanday yordam kerak?"
    await callback_query.message.answer(response_text, reply_markup=ReplyKeyboardRemove())
    await callback_query.answer()
    await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

@dp.message_handler(state='*')
async def receive_user_message(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    full_name = user_data.get('full_name')
    phone_number = user_data.get('phone_number')
    chosen_category = user_data.get('chosen_category')
    
    # Guruhga yuboriladigan xabar
    text_to_send = (
    f"<b>FIO:</b> {full_name}\n"
    f"<b>Raqam:</b> {phone_number}\n"
    f"<b>Kategoriya:</b> {chosen_category}\n"

    f"<b>Foydalanuvchi matni:</b> {message.text}"
)
    
    # Guruhga yuborish (misol uchun, guruh ID -1002482460312)
    await dp.bot.send_message(chat_id='-1002482460312', text=text_to_send)
    
    # Foydalanuvchiga tasdiq yuborish
    await message.answer("Botdan foydalanganingiz uchun tashakkur.")